{
  "version": 3,
  "sources": [
    "/home/travis/build/qooxdoo/qxl.playground/node_modules/@qooxdoo/compiler/node_modules/@qooxdoo/framework/source/class/qx/core/Property.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__gatherDependency",
    "event",
    "type",
    "Data",
    "dispatch",
    "Direct",
    "Promise",
    "__checks",
    "__dereference",
    "$$inherit",
    "$$store",
    "runtime",
    "user",
    "theme",
    "inherit",
    "init",
    "useinit",
    "$$method",
    "get",
    "getAsync",
    "set",
    "setImpl",
    "setAsync",
    "reset",
    "refresh",
    "setRuntime",
    "resetRuntime",
    "setThemed",
    "resetThemed",
    "$$allowedKeys",
    "name",
    "dereference",
    "inheritable",
    "nullable",
    "themeable",
    "refine",
    "apply",
    "check",
    "transform",
    "async",
    "deferredInit",
    "validate",
    "isEqual",
    "$$allowedGroupKeys",
    "group",
    "mode",
    "$$inheritable",
    "__executeOptimizedRefresh",
    "clazz",
    "inheritables",
    "__getInheritablesOfClass",
    "length",
    "refresher",
    "__createRefresher",
    "prototype",
    "$$refreshInheritables",
    "properties",
    "$$properties",
    "push",
    "superclass",
    "code",
    "i",
    "l",
    "Function",
    "join",
    "attachRefreshInheritables",
    "core",
    "Property",
    "attachMethods",
    "config",
    "__attachGroupMethods",
    "__attachPropertyMethods",
    "upname",
    "firstUp",
    "members",
    "setter",
    "resetter",
    "styler",
    "unstyler",
    "argHandler",
    "shorthand",
    "a",
    "undefined",
    "__shouldBeDereferenced",
    "method",
    "store",
    "getName",
    "$$install",
    "__installOptimizedGetter",
    "arguments",
    "setName",
    "__installOptimizedSetter",
    "executeOptimizedSetter",
    "value",
    "__errors",
    "error",
    "obj",
    "id",
    "property",
    "variant",
    "classname",
    "constructor",
    "msg",
    "Error",
    "__unwrapFunctionFromCode",
    "instance",
    "args",
    "fn",
    "__installFunctionFromCode",
    "call",
    "setDisplayName",
    "executeOptimizedGetter",
    "__compileGetter",
    "__compileSetter",
    "lang",
    "String",
    "incomingValue",
    "hasCallback",
    "__getStore",
    "__emitIsEqualFunction",
    "__emitSetterPreConditions",
    "__emitOldValue",
    "__emitIncomingValueTransformation",
    "__emitOldNewComparison",
    "__emitStoreValue",
    "__emitStoreComputedValue",
    "__emitStoreInheritedPropertyValue",
    "__emitNormalizeUndefinedValues",
    "__emitCallCallback",
    "_getChildren",
    "unshift",
    "resetValue",
    "__emitIncomingValueValidation"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Internal class for handling of dynamic properties. Should only be used\n * through the methods provided by {@link qx.Class}.\n *\n * For a complete documentation of properties take a look at\n * http://qooxdoo.org/docs/#core/property_features.md.\n *\n *\n * *Normal properties*\n *\n * The <code>properties</code> key in the class definition map of {@link qx.Class#define}\n * is used to generate the properties.\n *\n * Valid keys of a property definition are:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>check</th><td>Array, String, Function</td><td>\n *     The check is used to check the type the incoming value of a property. This will only\n *     be executed in the source version. The build version will not contain the checks.\n *     The check can be:\n *     <ul>\n *       <li>a custom check function. The function takes the incoming value as a parameter and must\n *           return a boolean value to indicate whether the values is valid.\n *       </li>\n *       <li>inline check code as a string e.g. <code>\"value &gt; 0 && value &lt; 100\"</code></li>\n *       <li>a class name e.g. <code>qx.ui.form.Button</code></li>\n *       <li>a name of an interface the value must implement</li>\n *       <li>an array of all valid values</li>\n *       <li>one of the predefined checks: Boolean, String, Number, Integer, Float, Double,\n *           Object, Array, Map, Class, Mixin, Interface, Theme, Error, RegExp, Function,\n *           Date, Node, Element, Document, Window, Event\n *       </li>\n *     <ul>\n *   </td></tr>\n *   <tr><th>init</th><td>var</td><td>\n *     Sets the default/initial value of the property. If no property value is set or the property\n *     gets reset, the getter will return the <code>init</code> value.\n *   </td></tr>\n *   <tr><th>apply</th><td>String</td><td>\n *     On change of the property value the method of the specified name will be called. The signature of\n *     the method is <code>function(newValue, oldValue, propertyName)</code>. It is conventional to name\n *     the callback <code>_apply</code> + <i>PropertyName</i>, with the property name camel-cased (e.g.\n *     \"<i>_applyFooBar</i>\" for a property <i>fooBar</i>).\n *   </td></tr>\n *   <tr><th>event</th><td>String</td><td>\n *     On change of the property value an event with the given name will be dispatched. The event type is\n *     {@link qx.event.type.Data}.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n *   <tr><th>inheritable</th><td>Boolean</td><td>\n *     Whether the property value should be inheritable. If the property does not have an user defined or an\n *     init value, the property will try to get the value from the parent of the current object.\n *   </td></tr>\n *   <tr><th>nullable</th><td>Boolean</td><td>\n *     Whether <code>null</code> is an allowed value of the property. This is complementary to the check\n *     defined using the <code>check</code> key.\n *   </td></tr>\n *   <tr><th>refine</th><td>Boolean</td><td>\n *     Whether the property definition is a refinement of a property in one of the super classes of the class.\n *     Only the <code>init</code> value can be changed using refine.\n *   </td></tr>\n *   <tr><th>transform</th><td>String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value, oldValue)</code>.\n *     The parameter <code>value</code> is the value passed to the setter, the\n *     parameter <code>oldValue</code> is the current value, or undefined if no value\n *     has been set previously.\n *     The function must return the modified or unmodified value.\n *     Transformation occurs before the check function, so both may be\n *     specified if desired.  Alternatively, the transform function may throw\n *     an error if the value passed to it is invalid.\n *   </td></tr>\n *   <tr><th>validate</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value)</code>.\n *     The parameter <code>value</code> is the value passed to the setter.\n *     If the validation fails, an <code>qx.core.ValidationError</code> should\n *     be thrown by the validation function. Otherwise, just do nothing in the\n *     function.<br>\n *     If a string is given, the string should hold a reference to a member\n *     method.<br>\n *     <code>\"<i>methodname</i>\"</code> for example\n *     <code>\"__validateProperty\"</code><br>\n *     There are some default validators in the {@link qx.util.Validate} class.\n *     See this documentation for usage examples.\n *   </td></tr>\n *   <tr><th>dereference</th><td>Boolean</td><td>\n *     By default, the references to the values (current, init, ...) of the\n *     property will be stored as references on the object. When disposing\n *     this object, the references will not be deleted. Setting the\n *     dereference key to true tells the property system to delete all\n *     connections made by this property on dispose. This can be necessary for\n *     disconnecting DOM objects to allow the garbage collector to work\n *     properly.\n *   </td></tr>\n *   <tr><th>deferredInit</th><td>Boolean</td><td>\n *     Allow for a deferred initialization for reference types. Defaults to false.\n *   </td></tr>\n *   <tr><th>isEqual</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called to test if two values are equal. These checks for equality are\n *     performed by the Property-System to decide whether further actions (like\n *     e.g. calling applier methods or firing of events) are needed.\n *     The signature of the method is <code>function(valueA, valueB)</code>.\n *     <br/>\n *     The <i>isEqual</i>-value can be:\n *     <ul>\n *       <li>a custom check function.\n *           The function takes two values as parameter and must return a\n *           boolean value to indicate whether the values are considered\n *           equal e.g. <code>function (a, b) { return Object.is(a, b); }</code>.</li>\n *       <li>inline check code as a string\n *           which will be invoked with two parameters <code>a</code> and\n *           <code>b</code> and results in a boolean value to indicate whether\n *           the values are equal e.g. <code>\"a.length() == b.length()\"</code>.</li>\n *       <li>reference to a member method as string\n *           <code>\"<i>methodname</i>\"</code> which will be invoked with two\n *           parameters and returns a boolean value indicating whether the two\n *           values are considered equal for example <code>\"__areTheSame\"</code>.</li>\n *     </ul>\n *     The default implementation (if this key is undefined) will check the\n *     equality by using the <i>identity</i> operator (===) as if defined like\n *     <code>\"a===b\"</code>.\n *   </td></tr>\n * </table>\n *\n * *Property groups*\n *\n * Property groups are defined in a similar way but support a different set of keys:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>group</th><td>String[]</td><td>\n *     A list of property names which should be set using the property group.\n *   </td></tr>\n *   <tr><th>mode</th><td>String</td><td>\n *     If mode is set to <code>\"shorthand\"</code>, the properties can be set using a CSS like shorthand mode.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n * </table>\n *\n * @internal\n * @ignore(qx.Interface)\n */\nqx.Bootstrap.define(\"qx.core.Property\",\n{\n  statics :\n  {\n    /**\n     * This is a method which does nothing than gathering dependencies for the\n     * module system. Calling this method is useless because it does nothing.\n     */\n    __gatherDependency : function() {\n      if (qx.core.Environment.get(\"module.events\")) {\n        qx.event.type.Data;\n        qx.event.dispatch.Direct;\n      }\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        qx.Promise;\n      }\n    },\n\n\n    /**\n     * Built-in checks\n     * The keys could be used in the check of the properties\n     */\n    __checks :\n    {\n      \"Boolean\"   : 'qx.core.Assert.assertBoolean(value, msg) || true',\n      \"String\"    : 'qx.core.Assert.assertString(value, msg) || true',\n\n      \"Number\"    : 'qx.core.Assert.assertNumber(value, msg) || true',\n      \"Integer\"   : 'qx.core.Assert.assertInteger(value, msg) || true',\n      \"PositiveNumber\" : 'qx.core.Assert.assertPositiveNumber(value, msg) || true',\n      \"PositiveInteger\" : 'qx.core.Assert.assertPositiveInteger(value, msg) || true',\n\n      \"Error\"     : 'qx.core.Assert.assertInstance(value, Error, msg) || true',\n      \"RegExp\"    : 'qx.core.Assert.assertInstance(value, RegExp, msg) || true',\n\n      \"Object\"    : 'qx.core.Assert.assertObject(value, msg) || true',\n      \"Array\"     : 'qx.core.Assert.assertArray(value, msg) || true',\n      \"Map\"       : 'qx.core.Assert.assertMap(value, msg) || true',\n\n      \"Function\"  : 'qx.core.Assert.assertFunction(value, msg) || true',\n      \"Date\"      : 'qx.core.Assert.assertInstance(value, Date, msg) || true',\n      \"Node\"      : 'value !== null && value.nodeType !== undefined',\n      \"Element\"   : 'value !== null && value.nodeType === 1 && value.attributes',\n      \"Document\"  : 'value !== null && value.nodeType === 9 && value.documentElement',\n      \"Window\"    : 'value !== null && value.document',\n      \"Event\"     : 'value !== null && value.type !== undefined',\n\n      \"Class\"     : 'value !== null && value.$$type === \"Class\"',\n      \"Mixin\"     : 'value !== null && value.$$type === \"Mixin\"',\n      \"Interface\" : 'value !== null && value.$$type === \"Interface\"',\n      \"Theme\"     : 'value !== null && value.$$type === \"Theme\"',\n\n      \"Color\"     : 'qx.lang.Type.isString(value) && qx.util.ColorUtil.isValidPropertyValue(value)',\n      \"Decorator\" : 'value !== null && qx.theme.manager.Decoration.getInstance().isValidPropertyValue(value)',\n      \"Font\"      : 'value !== null && qx.theme.manager.Font.getInstance().isDynamic(value)'\n    },\n\n\n    /**\n     * Contains types from {@link #__checks} list which need to be dereferenced\n     */\n    __dereference :\n    {\n      \"Node\"      : true,\n      \"Element\"   : true,\n      \"Document\"  : true,\n      \"Window\"    : true,\n      \"Event\"     : true\n    },\n\n\n    /**\n     * Inherit value, used to override defaults etc. to force inheritance\n     * even if property value is not undefined (through multi-values)\n     *\n     * @internal\n     */\n    $$inherit : \"inherit\",\n\n\n    /**\n     * Caching field names for each property created\n     *\n     * @internal\n     */\n    $$store :\n    {\n      runtime : {},\n      user    : {},\n      theme   : {},\n      inherit : {},\n      init    : {},\n      useinit : {}\n    },\n\n\n    /**\n     * Caching function names for each property created\n     *\n     * @internal\n     */\n    $$method :\n    {\n      get          : {},\n      getAsync     : {},\n      set          : {},\n      setImpl      : {},\n      setAsync     : {},\n      reset        : {},\n      init         : {},\n      refresh      : {},\n      setRuntime   : {},\n      resetRuntime : {},\n      setThemed    : {},\n      resetThemed  : {}\n    },\n\n\n    /**\n     * Supported keys for property definitions\n     *\n     * @internal\n     */\n    $$allowedKeys :\n    {\n      \"@\"          : \"object\",   // Anything\n      name         : \"string\",   // String\n      dereference  : \"boolean\",  // Boolean\n      inheritable  : \"boolean\",  // Boolean\n      nullable     : \"boolean\",  // Boolean\n      themeable    : \"boolean\",  // Boolean\n      refine       : \"boolean\",  // Boolean\n      init         : null,       // var\n      apply        : \"string\",   // String\n      event        : \"string\",   // String\n      check        : null,       // Array, String, Function\n      transform    : \"string\",   // String\n      async        : \"boolean\",  // Boolean\n      deferredInit : \"boolean\",  // Boolean\n      validate     : null,       // String, Function\n      isEqual      : null        // String, Function\n    },\n\n\n    /**\n     * Supported keys for property group definitions\n     *\n     * @internal\n     */\n    $$allowedGroupKeys :\n    {\n      \"@\"       : \"object\",   // Anything\n      name      : \"string\",   // String\n      group     : \"object\",   // Array\n      mode      : \"string\",   // String\n      themeable : \"boolean\"   // Boolean\n    },\n\n\n    /** Contains names of inheritable properties, filled by {@link qx.Class.define} */\n    $$inheritable : {},\n\n\n    /**\n     * Generate optimized refresh method and  attach it to the class' prototype\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    __executeOptimizedRefresh : function(clazz)\n    {\n      var inheritables = this.__getInheritablesOfClass(clazz);\n\n      if (!inheritables.length) {\n        var refresher = function () {};\n      } else {\n        refresher = this.__createRefresher(inheritables);\n      }\n\n      clazz.prototype.$$refreshInheritables = refresher;\n    },\n\n\n    /**\n     * Get the names of all inheritable properties of the given class\n     *\n     * @param clazz {Class} class to get the inheritable properties of\n     * @return {String[]} List of property names\n     */\n    __getInheritablesOfClass : function(clazz)\n    {\n      var inheritable = [];\n\n      while(clazz)\n      {\n        var properties = clazz.$$properties;\n\n        if (properties)\n        {\n          for (var name in this.$$inheritable)\n          {\n            // Whether the property is available in this class\n            // and whether it is inheritable in this class as well\n            if (properties[name] && properties[name].inheritable)\n            {\n              inheritable.push(name);\n            }\n          }\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return inheritable;\n    },\n\n\n    /**\n     * Assemble the refresher code and return the generated function\n     *\n     * @param inheritables {String[]} list of inheritable properties\n     * @return {Function} refresher function\n     */\n    __createRefresher : function(inheritables)\n    {\n      var inherit = this.$$store.inherit;\n      var init = this.$$store.init;\n      var refresh = this.$$method.refresh;\n\n      var code = [\n        \"var parent = this.getLayoutParent();\",\n        \"if (!parent) return;\"\n      ];\n\n      for (var i=0, l=inheritables.length; i<l; i++)\n      {\n        var name = inheritables[i];\n        code.push(\n          \"var value = parent.\", inherit[name],\";\",\n          \"if (value===undefined) value = parent.\", init[name], \";\",\n          \"this.\", refresh[name], \"(value);\"\n        );\n      }\n\n      return new Function(code.join(\"\"));\n    },\n\n\n    /**\n     * Attach $$refreshInheritables method stub to the given class\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    attachRefreshInheritables : function(clazz)\n    {\n      clazz.prototype.$$refreshInheritables = function()\n      {\n        qx.core.Property.__executeOptimizedRefresh(clazz);\n        return this.$$refreshInheritables();\n      };\n    },\n\n\n    /**\n     * Attach one property to class\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param name {String} Name of property\n     * @param config {Map} Configuration map of property\n     */\n    attachMethods : function(clazz, name, config)\n    {\n      // Divide groups from \"normal\" properties\n      config.group ?\n        this.__attachGroupMethods(clazz, config, name) :\n        this.__attachPropertyMethods(clazz, config, name);\n    },\n\n\n    /**\n     * Attach group methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachGroupMethods : function(clazz, config, name)\n    {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n      var themeable = config.themeable === true;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property group: \" + name);\n        }\n      }\n\n      var setter = [];\n      var resetter = [];\n\n      if (themeable)\n      {\n        var styler = [];\n        var unstyler = [];\n      }\n\n      var argHandler = \"var a=arguments[0] instanceof Array?arguments[0]:arguments;\";\n\n      setter.push(argHandler);\n\n      if (themeable) {\n        styler.push(argHandler);\n      }\n\n      if (config.mode == \"shorthand\")\n      {\n        var shorthand = \"a=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(a));\";\n        setter.push(shorthand);\n\n        if (themeable) {\n          styler.push(shorthand);\n        }\n      }\n\n      for (var i=0, a=config.group, l=a.length; i<l; i++)\n      {\n        if (qx.core.Environment.get(\"qx.debug\"))\n        {\n          if (!this.$$method.set[a[i]]||!this.$$method.reset[a[i]]) {\n            throw new Error(\"Cannot create property group '\" + name + \"' including non-existing property '\" + a[i] + \"'!\");\n          }\n        }\n\n        setter.push(\"this.\", this.$$method.set[a[i]], \"(a[\", i, \"]);\");\n        resetter.push(\"this.\", this.$$method.reset[a[i]], \"();\");\n\n        if (themeable)\n        {\n          if (qx.core.Environment.get(\"qx.debug\"))\n          {\n            if (!this.$$method.setThemed[a[i]]) {\n              throw new Error(\"Cannot add the non themable property '\" + a[i] + \"' to the themable property group '\"+ name +\"'\");\n            }\n          }\n\n          styler.push(\"this.\", this.$$method.setThemed[a[i]], \"(a[\", i, \"]);\");\n          unstyler.push(\"this.\", this.$$method.resetThemed[a[i]], \"();\");\n        }\n      }\n\n      // Attach setter\n      this.$$method.set[name] = \"set\" + upname;\n      members[this.$$method.set[name]] = new Function(setter.join(\"\"));\n\n      // Attach resetter\n      this.$$method.reset[name] = \"reset\" + upname;\n      members[this.$$method.reset[name]] = new Function(resetter.join(\"\"));\n\n      if (themeable)\n      {\n        // Attach styler\n        this.$$method.setThemed[name] = \"setThemed\" + upname;\n        members[this.$$method.setThemed[name]] = new Function(styler.join(\"\"));\n\n        // Attach unstyler\n        this.$$method.resetThemed[name] = \"resetThemed\" + upname;\n        members[this.$$method.resetThemed[name]] = new Function(unstyler.join(\"\"));\n      }\n    },\n\n\n    /**\n     * Attach property methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachPropertyMethods : function(clazz, config, name)\n    {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property wrappers: \" + name);\n        }\n      }\n\n      // Fill dispose value\n      if (config.dereference === undefined && typeof config.check === \"string\") {\n        config.dereference = this.__shouldBeDereferenced(config.check);\n      }\n\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        if (config.async) {\n          this.warn(\"Asynchronous property \" + clazz.classname +\".\" + name + \" is switched to synchronous because qx.promise==false\");\n          config.async = false;\n        }\n        if (config.check == \"qx.Promise\") {\n          this.error(\"Cannot implement check for property \" + clazz.classname +\".\" + name + \" because qx.promise==false\");\n          delete config.check;\n        }\n      }\n\n      // Check for method name conflicts\n      if (qx.core.Environment.get(\"qx.debug\")) {\n      \t// Exclude qx.data.model.* because that's from marshalling and will cause conflicts to be reported\n      \tif (clazz.classname && !clazz.classname.match(/^qx.data.model/)) {\n\t\t      var allNames = [ \"get\" + upname, \"set\" + upname, \"reset\" + upname, \"setRuntime\" + upname, \"resetRuntime\" + upname ];\n\t\t      if (config.async) {\n\t\t      \tallNames.push(\"get\" + upname + \"Async\");\n\t\t      \tallNames.push(\"set\" + upname + \"Async\");\n\t\t      }\n\t\t      if (config.inheritable || config.apply || config.event || config.deferredInit) {\n\t\t      \tallNames.push(\"init\" + upname);\n\t\t      }\n\t\t      if (config.inheritable) {\n\t\t      \tallNames.push(\"refresh\" + upname);\n\t\t      }\n\t\t      if (config.themeable) {\n\t\t      \tallNames.push(\"getThemed\" + upname);\n\t\t      \tallNames.push(\"setThemed\" + upname);\n\t\t      \tallNames.push(\"resetThemed\" + upname);\n\t\t      }\n\t\t      if (config.check === \"Boolean\") {\n\t\t      \tallNames.push(\"is\" + upname);\n\t\t      \tallNames.push(\"toggle\" + upname);\n\t\t      }\n          allNames.forEach(function(name) {\n            if (clazz.superclass.prototype[name] !== undefined) {\n              var conflictingClass = null;\n              for (var tmp = clazz.superclass; tmp && tmp != qx.core.Object; tmp = tmp.superclass) {\n                if (tmp.superclass.prototype[name] === undefined) {\n                  conflictingClass = tmp;\n                  break;\n                }\n              }\n              if (conflictingClass) {\n                qx.log.Logger.warn(\"Conflicting property method \" + clazz.classname + \".\" + name + \" with \" + conflictingClass.classname);\n              }\n            }\n          });\n      \t}\n      }\n\n      var method = this.$$method;\n      var store = this.$$store;\n\n      store.runtime[name] = \"$$runtime_\" + name;\n      store.user[name] = \"$$user_\" + name;\n      store.theme[name] = \"$$theme_\" + name;\n      store.init[name] = \"$$init_\" + name;\n      store.inherit[name] = \"$$inherit_\" + name;\n      store.useinit[name] = \"$$useinit_\" + name;\n\n      var getName = method.get[name] = \"get\" + upname;\n      members[method.get[name]] = new Function(\n          \"this.\" + getName + \".$$install && this.\" + getName + \".$$install();\" +\n          \"return this.\" + getName + \".apply(this, arguments);\");\n      if (config.async) {\n\n      \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \t\tif (members.hasOwnProperty(getName + \"Async\")) {\n      \t\t\tthis.error(\"Asynchronous property \" + clazz.classname +\".\" + name + \" is replacing \" + getName + \"Async() method in same class\");\n      \t\t} else if (members[getName + \"Async\"] !== undefined) {\n      \t\t\tthis.warn(\"Asynchronous property \" + clazz.classname +\".\" + name + \" is overriding \" + getName + \"Async() method\");\n      \t\t}\n      \t}\n\t      method.getAsync[name] = getName + \"Async\";\n\t      members[method.getAsync[name]] = new Function(\n\t          \"this.\" + getName + \".$$install && this.\" + getName + \".$$install.call(this);\" +\n\t          \"return this.\" + getName + \"Async.apply(this, arguments);\");\n      }\n      members[method.get[name]].$$install = function() {\n        qx.core.Property.__installOptimizedGetter(clazz, name, \"get\", arguments);\n        if (config.async) {\n        \tqx.core.Property.__installOptimizedGetter(clazz, name, \"getAsync\", arguments);\n        }\n      };\n\n      var setName = method.set[name] = \"set\" + upname;\n      members[setName] = new Function(\n          \"this.\" + setName + \".$$install && this.\" + setName + \".$$install.call(this);\" +\n          \"return this.\" + setName + \".apply(this, arguments);\");\n      method.setAsync[name] = \"set\" + upname + \"Async\";\n      if (config.async) {\n      \tif (qx.core.Environment.get(\"qx.debug\")) {\n      \t\tif (members.hasOwnProperty(setName + \"Async\")) {\n      \t\t\tthis.error(\"Asynchronous property \" + clazz.classname +\".\" + name + \" is replacing \" + setName + \"Async() method in same class\");\n      \t\t} else if (members[setName + \"Async\"] !== undefined) {\n      \t\t\tthis.warn(\"Asynchronous property \" + clazz.classname +\".\" + name + \" is overriding \" + setName + \"Async() method\");\n      \t\t}\n      \t}\n        members[setName + \"Async\"] = new Function(\n            \"this.\" + setName + \".$$install && this.\" + setName + \".$$install.call(this);\" +\n            \"return this.\" + setName + \"Async.apply(this, arguments);\");\n      }\n      method.setImpl[name] = \"$$set\" + upname + \"Impl\";\n      members[setName].$$install = function() {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"set\");\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"setImpl\");\n        if (config.async) {\n          qx.core.Property.__installOptimizedSetter(clazz, name, \"setAsync\");\n        }\n      };\n\n      method.reset[name] = \"reset\" + upname;\n      members[method.reset[name]] = function() {\n        return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"reset\");\n      };\n      members[method.reset[name]].$$install = function() {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"reset\");\n      };\n\n      if (config.inheritable || config.apply || config.event || config.deferredInit)\n      {\n        method.init[name] = \"init\" + upname;\n        members[method.init[name]] = function(value) {\n          return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"init\", arguments);\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.init[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.inheritable)\n      {\n        method.refresh[name] = \"refresh\" + upname;\n        members[method.refresh[name]] = function(value) {\n          return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"refresh\", arguments);\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.refresh[name]].$$propertyMethod = true;\n        }\n      }\n\n      method.setRuntime[name] = \"setRuntime\" + upname;\n      members[method.setRuntime[name]] = function(value) {\n        return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"setRuntime\", arguments);\n      };\n\n      method.resetRuntime[name] = \"resetRuntime\" + upname;\n      members[method.resetRuntime[name]] = function() {\n        return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"resetRuntime\");\n      };\n\n      if (config.themeable)\n      {\n        method.setThemed[name] = \"setThemed\" + upname;\n        members[method.setThemed[name]] = function(value) {\n          return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"setThemed\", arguments);\n        };\n\n        method.resetThemed[name] = \"resetThemed\" + upname;\n        members[method.resetThemed[name]] = function() {\n          return qx.core.Property.executeOptimizedSetter(this, clazz, name, \"resetThemed\");\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.setThemed[name]].$$propertyMethod = true;\n          members[method.resetThemed[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.check === \"Boolean\")\n      {\n        members[\"toggle\" + upname] = new Function(\"return this.\" + method.set[name] + \"(!this.\" + method.get[name] + \"())\");\n        members[\"is\" + upname] = new Function(\"return this.\" + method.get[name] + \"()\");\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[\"toggle\" + upname].$$propertyMethod = true;\n          members[\"is\" + upname].$$propertyMethod = true;\n        }\n      }\n\n      // attach a flag to make generated property methods\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        members[method.get[name]].$$propertyMethod = true;\n        members[method.set[name]].$$propertyMethod = true;\n        members[method.reset[name]].$$propertyMethod = true;\n        members[method.setRuntime[name]].$$propertyMethod = true;\n        members[method.resetRuntime[name]].$$propertyMethod = true;\n      }\n    },\n\n\n    /**\n     * Returns if the reference for the given property check should be removed\n     * on dispose.\n     *\n     * @param check {var} The check of the property definition.\n     * @return {Boolean} If the dereference key should be set.\n     */\n    __shouldBeDereferenced :  function(check) {\n      return !!this.__dereference[check];\n    },\n\n\n    /** @type {Map} Internal data field for error messages used by {@link #error} */\n    __errors :\n    {\n      0 : 'Could not change or apply init value after constructing phase!',\n      1 : 'Requires exactly one argument!',\n      2 : 'Undefined value is not allowed!',\n      3 : 'Does not allow any arguments!',\n      4 : 'Null value is not allowed!',\n      5 : 'Is invalid!'\n    },\n\n\n    /**\n     * Error method used by the property system to report errors.\n     *\n     * @param obj {qx.core.Object} Any qooxdoo object\n     * @param id {Integer} Numeric error identifier\n     * @param property {String} Name of the property\n     * @param variant {String} Name of the method variant e.g. \"set\", \"reset\", ...\n     * @param value {var} Incoming value\n     */\n    error : function(obj, id, property, variant, value)\n    {\n      var classname = obj.constructor.classname;\n      var msg = \"Error in property \" + property + \" of class \" + classname +\n        \" in method \" + this.$$method[variant][property] + \" with incoming value '\" + value + \"': \";\n\n      throw new Error(msg + (this.__errors[id] || \"Unknown reason: \" + id));\n    },\n\n\n    /**\n     * Compiles a string builder object to a function, executes the function and\n     * returns the return value.\n     *\n     * @param instance {Object} Instance which have called the original method\n     * @param members {Object} Prototype members map where the new function should be stored\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __unwrapFunctionFromCode : function(instance, members, name, variant, code, args)\n    {\n    \tvar fn = this.__installFunctionFromCode(instance.constructor, name, variant, code, args);\n\n      // Executing new function\n      if (args === undefined) {\n        return fn.call(instance);\n      } else if (qx.core.Environment.get(\"qx.debug\")) {\n        return fn.apply(instance, args);\n      } else {\n        return fn.call(instance, args[0]);\n      }\n    },\n\n\n    /**\n     * Takes a string builder object, converts it into a function, and installs it as\n     * a property accessor\n     *\n     * @param clazz {Class} Class to install the method into\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __installFunctionFromCode : function(clazz, name, variant, code, args)\n    {\n      var store = this.$$method[variant][name];\n\n      // Output generate code\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Code[\" + this.$$method[variant][name] + \"]: \" + code.join(\"\"));\n        }\n\n        // Overriding temporary wrapper\n        try{\n          clazz.prototype[store] =  new Function(\"value\", code.join(\"\"));\n        } catch(ex) {\n          throw new Error(\"Malformed generated code to unwrap method: \" + this.$$method[variant][name] + \"\\n\" + code.join(\"\"));\n        }\n      }\n      else\n      {\n        clazz.prototype[store] =  new Function(\"value\", code.join(\"\"));\n      }\n\n      // Enable profiling code\n      if (qx.core.Environment.get(\"qx.aspects\")) {\n        clazz.prototype[store] = qx.core.Aspect.wrap(clazz.classname + \".\" + store, clazz.prototype[store], \"property\");\n      }\n\n      qx.Bootstrap.setDisplayName(clazz.prototype[store], clazz.classname + \".prototype\", store);\n      return clazz.prototype[store];\n    },\n\n\n    /**\n     * Generates the optimized getter, installs it into the class prototype, and executes it\n     * Supported variants: get\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedGetter : function(instance, clazz, name, variant)\n    {\n      var code = this.__compileGetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(instance, members, name, variant, code);\n    },\n\n\n    /**\n     * Installs a getter into the class prototype, without executing it\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __installOptimizedGetter : function(clazz, name, variant)\n    {\n      var code = this.__compileGetter(clazz, name, variant);\n      this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n\n    /**\n     * Compiles a getter into a string builder array\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileGetter: function(clazz, name, variant)\n    {\n      var config = clazz.$$properties[name];\n      var code = [];\n      var store = this.$$store;\n\n      if (variant == \"getAsync\") {\n      \tcode.push(\"return qx.Promise.resolve(this.\" + this.$$method.get[name] + \"());\");\n      \treturn code;\n      }\n\n      code.push('if(this.', store.runtime[name], '!==undefined)');\n      code.push('return this.', store.runtime[name], ';');\n\n      if (config.inheritable)\n      {\n        code.push('else if(this.', store.inherit[name], '!==undefined)');\n        code.push('return this.', store.inherit[name], ';');\n        code.push('else ');\n      }\n\n      code.push('if(this.', store.user[name], '!==undefined)');\n      code.push('return this.', store.user[name], ';');\n\n      if (config.themeable)\n      {\n        code.push('else if(this.', store.theme[name], '!==undefined)');\n        code.push('return this.', store.theme[name], ';');\n      }\n\n      if (config.deferredInit && config.init === undefined)\n      {\n        code.push('else if(this.', store.init[name], '!==undefined)');\n        code.push('return this.', store.init[name], ';');\n      }\n\n      code.push('else ');\n\n      if (config.init !== undefined)\n      {\n        if (config.inheritable)\n        {\n          code.push('var init=this.', store.init[name], ';');\n\n          if (config.nullable) {\n            code.push('if(init==qx.core.Property.$$inherit)init=null;');\n          }\n\n          code.push('return init;');\n        }\n        else\n        {\n          code.push('return this.', store.init[name], ';');\n        }\n      }\n      else if (config.inheritable || config.nullable) {\n        code.push('return null;');\n      } else {\n        code.push('throw new Error(\"Property ', name, ' of an instance of ', clazz.classname, ' is not (yet) ready!\");');\n      }\n\n      return code;\n    },\n\n\n    /**\n     * Generates the optimized setter\n     * Supported variants: set, reset, init, refresh, style, unstyle\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedSetter : function(instance, clazz, name, variant, args)\n    {\n    \tvar code = this.__compileSetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(instance, members, name, variant, code, args);\n    },\n\n\n    /**\n     * Installs a setter into the class prototype, without executing it\n     * Supported variants: set\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Return value of the generated function\n     */\n    __installOptimizedSetter : function(clazz, name, variant)\n    {\n    \tvar code = this.__compileSetter(clazz, name, variant);\n      return this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n\n    /**\n     * Compiles a setter into a string builder array\n     * Supported variants: set, setThemed, setRuntime, init\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileSetter: function(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var members = clazz.prototype;\n      var code = [];\n\n      var upname = qx.lang.String.firstUp(name);\n      if (variant == \"setAsync\") {\n        code.push('return qx.Promise.resolve(this.$$set' + upname + \"Impl.apply(this, arguments));\");\n        return code;\n\n      } else if (variant == \"set\") {\n        code.push(\n            'this.$$set' + upname + \"Impl.apply(this, arguments);\",\n            'return value;');\n        return code;\n\n      }\n\n      var incomingValue =\n        variant === \"setImpl\" ||\n        variant === \"setThemed\" ||\n        variant === \"setRuntime\" ||\n        (variant === \"init\" && config.init === undefined);\n      var hasCallback = config.apply || config.event || config.inheritable;\n\n\n      var store = this.__getStore(variant, name);\n\n      this.__emitIsEqualFunction(code, clazz, config, name);\n\n      this.__emitSetterPreConditions(code, config, name, variant, incomingValue);\n\n      if (incomingValue || hasCallback) {\n        this.__emitOldValue(code, config, name);\n      }\n\n      if (incomingValue) {\n        this.__emitIncomingValueTransformation(code, clazz, config, name);\n      }\n\n      if (hasCallback) {\n        this.__emitOldNewComparison(code, incomingValue, store, variant);\n      }\n\n      if (config.inheritable) {\n        code.push('var inherit=prop.$$inherit;');\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        if (incomingValue) {\n          this.__emitIncomingValueValidation(code, config, clazz, name, variant);\n        }\n      }\n\n      if (!hasCallback) {\n        this.__emitStoreValue(code, name, variant, incomingValue);\n      } else {\n        this.__emitStoreComputedValue(code, config, name, variant, incomingValue);\n      }\n\n      if (config.inheritable) {\n        this.__emitStoreInheritedPropertyValue(code, config, name, variant);\n      } else if (hasCallback) {\n        this.__emitNormalizeUndefinedValues(code, config, name, variant);\n      }\n\n      if (hasCallback)\n      {\n        // Emit callback and event firing; Refreshing children (5th parameter) requires the parent/children interface\n        this.__emitCallCallback(code, config, name, variant, !!(config.inheritable && members._getChildren));\n      }\n\n      // Return value\n      if (incomingValue) {\n        code.unshift('function set(value){');\n        code.push('}');\n        if (qx.core.Environment.get(\"qx.promise\") && (!config.check || config.check != \"qx.Promise\")) {\n          code.push(\n              'var promise;',\n              'if (value instanceof qx.Promise) ',\n                'promise = value.then(set.bind(this));',\n              'else ',\n                'promise = set.apply(this, arguments);');\n          if (variant == \"setImpl\") {\n            code.push(\"return promise;\");\n          } else {\n            code.push('return value;');\n          }\n        } else {\n          code.push(\n              'set.apply(this, arguments);',\n              'return value;');\n        }\n      }\n\n      return code;\n    },\n\n\n    /**\n     * Get the object to store the value for the given variant\n     *\n     * @param variant {String} Method variant.\n     * @param name {String} name of the property\n     *\n     * @return {Object} the value store\n     */\n    __getStore : function(variant, name)\n    {\n      if (variant === \"setRuntime\" || variant === \"resetRuntime\") {\n        var store = this.$$store.runtime[name];\n      } else if (variant === \"setThemed\" || variant === \"resetThemed\") {\n        store = this.$$store.theme[name];\n      } else if (variant === \"init\") {\n        store = this.$$store.init[name];\n      } else {\n        store = this.$$store.user[name];\n      }\n\n      return store;\n    },\n\n\n    /**\n     * Emit code for the equality check evaluation\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIsEqualFunction : function (code, clazz, config, name)\n    {\n      code.push('var equ=');\n\n      if (typeof config.isEqual === \"function\")\n      {\n        code.push('function(a,b){return !!', clazz.classname, '.$$properties.',\n                  name, '.isEqual.call(this,a,b);};');\n      }\n      else if (typeof config.isEqual === \"string\")\n      {\n        var members = clazz.prototype;\n        // Name of member?\n        if (members[config.isEqual]!==undefined)\n        {\n          code.push('this.', config.isEqual, ';');\n        }\n        else // 'inline' code\n        {\n          code.push('function(a,b){return !!(', config.isEqual, ');};');\n        }\n      }\n      else if (typeof config.isEqual === \"undefined\")\n      {\n        code.push('function(a,b){return a===b;};');\n      }\n      else\n      {\n        throw new Error( \"Invalid type for 'isEqual' attribute \" +\n          \"of property '\" + name + \"' in class '\" + clazz.classname + \"'\" );\n      }\n    },\n\n\n    /**\n     * Emit code to check the arguments preconditions\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitSetterPreConditions : function(code, config, name, variant, incomingValue)\n    {\n      if (qx.core.Environment.get(\"qx.debug\"))\n      {\n        code.push('var prop=qx.core.Property;');\n\n        if (variant === \"init\") {\n          code.push('if(this.$$initialized)prop.error(this,0,\"', name, '\",\"', variant, '\",value);');\n        }\n\n        if (variant === \"refresh\")\n        {\n          // do nothing\n          // refresh() is internal => no arguments test\n          // also note that refresh() supports \"undefined\" values\n        }\n        else if (incomingValue)\n        {\n          // Check argument length\n          code.push('if(arguments.length!==1)prop.error(this,1,\"', name, '\",\"', variant, '\",value);');\n\n          // Undefined check\n          code.push('if(value===undefined)prop.error(this,2,\"', name, '\",\"', variant, '\",value);');\n        }\n        else\n        {\n          // Check argument length\n          code.push('if(arguments.length!==0)prop.error(this,3,\"', name, '\",\"', variant, '\",value);');\n        }\n      }\n      else\n      {\n        if (!config.nullable || config.check || config.inheritable) {\n          code.push('var prop=qx.core.Property;');\n        }\n\n        // Undefined check\n        if (variant === \"setImpl\") {\n          code.push('if(value===undefined)prop.error(this,2,\"', name, '\",\"', variant, '\",value);');\n        }\n      }\n    },\n\n\n    /**\n     * Emit code to apply the \"validate\" and \"transform\" config keys.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIncomingValueTransformation : function(code, clazz, config, name)\n    {\n      // Call user-provided transform method, if one is provided.  Transform\n      // method should either throw an error or return the new value.\n      if (config.transform) {\n        code.push('value=this.', config.transform, '(value, old);');\n      }\n\n      // Call user-provided validate method, if one is provided.  Validate\n      // method should either throw an error or do nothing.\n      if (config.validate) {\n        // if it is a string\n        if (typeof config.validate === \"string\") {\n          code.push('this.', config.validate, '(value);');\n        // if its a function otherwise\n        } else if (config.validate instanceof Function) {\n          code.push(clazz.classname, '.$$properties.', name);\n          code.push('.validate.call(this, value);');\n        }\n      }\n    },\n\n\n    /**\n     * Emit code, which returns if the incoming value equals the current value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     * @param store {Object} The data store to use for the incoming value\n     * @param variant {String} Method variant.\n     */\n    __emitOldNewComparison : function(code, incomingValue, store, variant)\n    {\n      var resetValue = (\n        variant === \"reset\" ||\n        variant === \"resetThemed\" ||\n        variant === \"resetRuntime\"\n      );\n\n      if (incomingValue) {\n        code.push('if(equ.call(this,this.',store,',value))return value;');\n      } else if (resetValue) {\n        code.push('if(this.', store, '===undefined)return;');\n      }\n    },\n\n\n    /**\n     * Emit code, which performs validation of the incoming value according to\n     * the \"nullable\", \"check\" and \"inheritable\" config keys.\n     *\n     * @signature function(code, config, clazz, name, variant)\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitIncomingValueValidation : qx.core.Environment.select(\"qx.debug\",\n    {\n      \"true\" : function(code, config, clazz, name, variant)\n      {\n        // Null check\n        if (!config.nullable) {\n          code.push('if(value===null)prop.error(this,4,\"', name, '\",\"', variant, '\",value);');\n        }\n\n        // Processing check definition\n        if (config.check !== undefined)\n        {\n          code.push('var msg = \"Invalid incoming value for property \\''+name+'\\' of class \\'' + clazz.classname + '\\'\";');\n\n          // Accept \"null\"\n          if (config.nullable) {\n            code.push('if(value!==null)');\n          }\n\n          // Inheritable properties always accept \"inherit\" as value\n          if (config.inheritable) {\n            code.push('if(value!==inherit)');\n          }\n\n          code.push('if(');\n\n          if (this.__checks[config.check] !== undefined)\n          {\n            code.push('!(', this.__checks[config.check], ')');\n          }\n          else if (qx.Class.isDefined(config.check))\n          {\n            code.push('qx.core.Assert.assertInstance(value, qx.Class.getByName(\"', config.check, '\"), msg)');\n          }\n          else if (qx.Interface && qx.Interface.isDefined(config.check))\n          {\n            code.push('qx.core.Assert.assertInterface(value, qx.Interface.getByName(\"', config.check, '\"), msg)');\n          }\n          else if (typeof config.check === \"function\")\n          {\n            code.push('!', clazz.classname, '.$$properties.', name);\n            code.push('.check.call(this, value)');\n          }\n          else if (typeof config.check === \"string\")\n          {\n            code.push('!(', config.check, ')');\n          }\n          else if (config.check instanceof Array)\n          {\n            code.push('qx.core.Assert.assertInArray(value, ', clazz.classname, '.$$properties.', name, '.check, msg)');\n          }\n          else\n          {\n            throw new Error(\"Could not add check to property \" + name + \" of class \" + clazz.classname);\n          }\n\n          code.push(')prop.error(this,5,\"', name, '\",\"', variant, '\",value);');\n        }\n      },\n\n      \"false\" : undefined\n    }),\n\n\n    /**\n     * Emit code to store the incoming value\n     *\n     * @param code {String[]} String array to append the code to\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreValue : function(code, name, variant, incomingValue)\n    {\n      if (variant === \"setRuntime\")\n      {\n        code.push('this.', this.$$store.runtime[name], '=value;');\n      }\n      else if (variant === \"resetRuntime\")\n      {\n        code.push('if(this.', this.$$store.runtime[name], '!==undefined)');\n        code.push('delete this.', this.$$store.runtime[name], ';');\n      }\n      else if (variant === \"setImpl\")\n      {\n        code.push('this.', this.$$store.user[name], '=value;');\n      }\n      else if (variant === \"reset\")\n      {\n        code.push('if(this.', this.$$store.user[name], '!==undefined)');\n        code.push('delete this.', this.$$store.user[name], ';');\n      }\n      else if (variant === \"setThemed\")\n      {\n        code.push('this.', this.$$store.theme[name], '=value;');\n      }\n      else if (variant === \"resetThemed\")\n      {\n        code.push('if(this.', this.$$store.theme[name], '!==undefined)');\n        code.push('delete this.', this.$$store.theme[name], ';');\n      }\n      else if (variant === \"init\" && incomingValue)\n      {\n        code.push('this.', this.$$store.init[name], '=value;');\n      }\n    },\n\n\n    /**\n     * Emit code to store the incoming value and compute the \"old\" and \"computed\"\n     * values.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreComputedValue : function(code, config, name, variant, incomingValue)\n    {\n      code.push('var computed;');\n\n\n      // OLD = RUNTIME VALUE\n      code.push('if(this.', this.$$store.runtime[name], '!==undefined){');\n\n      if (variant === \"setRuntime\")\n      {\n        // Replace it with new value\n        code.push('computed=this.', this.$$store.runtime[name], '=value;');\n      }\n      else if (variant === \"resetRuntime\")\n      {\n        // Delete field\n        code.push('delete this.', this.$$store.runtime[name], ';');\n\n        // Complex computation of new value\n        code.push('if(this.', this.$$store.user[name], '!==undefined)');\n        code.push('computed=this.', this.$$store.user[name], ';');\n        code.push('else if(this.', this.$$store.theme[name], '!==undefined)');\n        code.push('computed=this.', this.$$store.theme[name], ';');\n        code.push('else if(this.', this.$$store.init[name], '!==undefined){');\n        code.push('computed=this.', this.$$store.init[name], ';');\n        code.push('this.', this.$$store.useinit[name], '=true;');\n        code.push('}');\n      }\n      else\n      {\n        // Use runtime value as it has higher priority\n        code.push('computed=this.', this.$$store.runtime[name], ';');\n\n        // Store incoming value\n        if (variant === \"setImpl\")\n        {\n          code.push('this.', this.$$store.user[name], '=value;');\n        }\n        else if (variant === \"reset\")\n        {\n          code.push('delete this.', this.$$store.user[name], ';');\n        }\n        else if (variant === \"setThemed\")\n        {\n          code.push('this.', this.$$store.theme[name], '=value;');\n        }\n        else if (variant === \"resetThemed\")\n        {\n          code.push('delete this.', this.$$store.theme[name], ';');\n        }\n        else if (variant === \"init\" && incomingValue)\n        {\n          code.push('this.', this.$$store.init[name], '=value;');\n        }\n      }\n\n      code.push('}');\n\n\n      // OLD = USER VALUE\n      code.push('else if(this.', this.$$store.user[name], '!==undefined){');\n\n      if (variant === \"setImpl\")\n      {\n        // Replace it with new value\n        code.push('computed=this.', this.$$store.user[name], '=value;');\n      }\n      else if (variant === \"reset\")\n      {\n        // Delete field\n        code.push('delete this.', this.$$store.user[name], ';');\n\n        // Complex computation of new value\n        code.push('if(this.', this.$$store.runtime[name], '!==undefined)');\n        code.push('computed=this.', this.$$store.runtime[name], ';');\n        code.push('if(this.', this.$$store.theme[name], '!==undefined)');\n        code.push('computed=this.', this.$$store.theme[name], ';');\n        code.push('else if(this.', this.$$store.init[name], '!==undefined){');\n        code.push('computed=this.', this.$$store.init[name], ';');\n        code.push('this.', this.$$store.useinit[name], '=true;');\n        code.push('}');\n      }\n      else\n      {\n        if (variant === \"setRuntime\")\n        {\n          // Use runtime value where it has higher priority\n          code.push('computed=this.', this.$$store.runtime[name], '=value;');\n        }\n        else if (config.inheritable)\n        {\n          // Use user value where it has higher priority\n          code.push('computed=this.', this.$$store.user[name], ';');\n        }\n        else\n        {\n          // Use user value where it has higher priority\n          code.push('computed=this.', this.$$store.user[name], ';');\n        }\n\n        // Store incoming value\n        if (variant === \"setThemed\")\n        {\n          code.push('this.', this.$$store.theme[name], '=value;');\n        }\n        else if (variant === \"resetThemed\")\n        {\n          code.push('delete this.', this.$$store.theme[name], ';');\n        }\n        else if (variant === \"init\" && incomingValue)\n        {\n          code.push('this.', this.$$store.init[name], '=value;');\n        }\n      }\n\n      code.push('}');\n\n\n      // OLD = THEMED VALUE\n      if (config.themeable)\n      {\n        code.push('else if(this.', this.$$store.theme[name], '!==undefined){');\n\n        if (variant === \"setRuntime\")\n        {\n          code.push('computed=this.', this.$$store.runtime[name], '=value;');\n        }\n\n        else if (variant === \"setImpl\")\n        {\n          code.push('computed=this.', this.$$store.user[name], '=value;');\n        }\n\n        // reset() is impossible, because the user has higher priority than\n        // the themed value, so the themed value has no chance to ever get used,\n        // when there is an user value, too.\n\n        else if (variant === \"setThemed\")\n        {\n          code.push('computed=this.', this.$$store.theme[name], '=value;');\n        }\n        else if (variant === \"resetThemed\")\n        {\n          // Delete entry\n          code.push('delete this.', this.$$store.theme[name], ';');\n\n          // Fallback to init value\n          code.push('if(this.', this.$$store.init[name], '!==undefined){');\n            code.push('computed=this.', this.$$store.init[name], ';');\n            code.push('this.', this.$$store.useinit[name], '=true;');\n          code.push('}');\n        }\n        else if (variant === \"init\")\n        {\n          if (incomingValue) {\n            code.push('this.', this.$$store.init[name], '=value;');\n          }\n\n          code.push('computed=this.', this.$$store.theme[name], ';');\n        }\n        else if (variant === \"refresh\")\n        {\n          code.push('computed=this.', this.$$store.theme[name], ';');\n        }\n\n        code.push('}');\n      }\n\n\n      // OLD = INIT VALUE\n      code.push('else if(this.', this.$$store.useinit[name], '){');\n\n      if (variant === \"init\")\n      {\n        if (incomingValue) {\n          code.push('computed=this.', this.$$store.init[name], '=value;');\n        } else {\n          code.push('computed=this.', this.$$store.init[name], ';');\n        }\n\n        // useinit flag is already initialized\n      }\n\n      // reset(), resetRuntime() and resetStyle() are impossible, because the user and themed values have a\n      // higher priority than the init value, so the init value has no chance to ever get used,\n      // when there is an user or themed value, too.\n\n      else if (variant === \"setImpl\" || variant === \"setRuntime\" || variant === \"setThemed\" || variant === \"refresh\")\n      {\n        code.push('delete this.', this.$$store.useinit[name], ';');\n\n        if (variant === \"setRuntime\") {\n          code.push('computed=this.', this.$$store.runtime[name], '=value;');\n        } else if (variant === \"setImpl\") {\n          code.push('computed=this.', this.$$store.user[name], '=value;');\n        } else if (variant === \"setThemed\") {\n          code.push('computed=this.', this.$$store.theme[name], '=value;');\n        } else if (variant === \"refresh\") {\n          code.push('computed=this.', this.$$store.init[name], ';');\n        }\n      }\n\n      code.push('}');\n\n\n      // OLD = NONE\n\n      // reset(), resetRuntime() and resetStyle() are impossible because otherwise there\n      // is already an old value\n      if (variant === \"setImpl\" || variant === \"setRuntime\" || variant === \"setThemed\" || variant === \"init\")\n      {\n        code.push('else{');\n\n        if (variant === \"setRuntime\")\n        {\n          code.push('computed=this.', this.$$store.runtime[name], '=value;');\n        }\n\n        else if (variant === \"setImpl\")\n        {\n          code.push('computed=this.', this.$$store.user[name], '=value;');\n        }\n\n        else if (variant === \"setThemed\")\n        {\n          code.push('computed=this.', this.$$store.theme[name], '=value;');\n        }\n\n        else if (variant === \"init\")\n        {\n          if (incomingValue) {\n            code.push('computed=this.', this.$$store.init[name], '=value;');\n          } else {\n            code.push('computed=this.', this.$$store.init[name], ';');\n          }\n\n          code.push('this.', this.$$store.useinit[name], '=true;');\n        }\n\n        // refresh() will work with the undefined value, later\n        code.push('}');\n      }\n    },\n\n\n    /**\n     * Emit code to compute the \"old\" value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitOldValue : function(code, config, name)\n    {\n      if (config.inheritable) {\n        code.push('var old=this.', this.$$store.inherit[name], ';');\n      } else {\n        code.push('var old;');\n      }\n\n      // OLD = RUNTIME VALUE\n      code.push('if(this.', this.$$store.runtime[name], '!==undefined){');\n      code.push('old=this.', this.$$store.runtime[name], ';');\n      code.push('}');\n\n      // OLD = USER VALUE\n      if (!config.inheritable) {\n        code.push('else if(this.', this.$$store.user[name], '!==undefined){');\n        code.push('old=this.', this.$$store.user[name], ';');\n        code.push('}');\n\n        // OLD = THEMED VALUE\n        if (config.themeable) {\n          code.push('else if(this.', this.$$store.theme[name], '!==undefined){');\n          code.push('old=this.', this.$$store.theme[name], ';');\n          code.push('}');\n        }\n\n        // OLD = INIT VALUE\n        code.push('else if(this.', this.$$store.useinit[name], '){');\n        code.push('old=this.', this.$$store.init[name], ';');\n        code.push('}');\n      }\n    },\n\n\n    /**\n     * Emit code to store the value of an inheritable property\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitStoreInheritedPropertyValue : function(code, config, name, variant)\n    {\n      code.push('if(computed===undefined||computed===inherit){');\n\n      if (variant === \"refresh\") {\n        code.push('computed=value;');\n      } else {\n        code.push('var pa=this.getLayoutParent();if(pa)computed=pa.', this.$$store.inherit[name], ';');\n      }\n\n      // Fallback to init value if inheritance was unsuccessful\n      code.push('if((computed===undefined||computed===inherit)&&');\n      code.push('this.', this.$$store.init[name], '!==undefined&&');\n      code.push('this.', this.$$store.init[name], '!==inherit){');\n        code.push('computed=this.', this.$$store.init[name], ';');\n        code.push('this.', this.$$store.useinit[name], '=true;');\n      code.push('}else{');\n      code.push('delete this.', this.$$store.useinit[name], ';}');\n\n      code.push('}');\n\n      // Compare old/new computed value\n      code.push('if(equ.call(this,old,computed))return value;');\n\n      // Note: At this point computed can be \"inherit\" or \"undefined\".\n\n      // Normalize \"inherit\" to undefined and delete inherited value\n      code.push('if(computed===inherit){');\n      code.push('computed=undefined;delete this.', this.$$store.inherit[name], ';');\n      code.push('}');\n\n      // Only delete inherited value\n      code.push('else if(computed===undefined)');\n      code.push('delete this.', this.$$store.inherit[name], ';');\n\n      // Store inherited value\n      code.push('else this.', this.$$store.inherit[name], '=computed;');\n\n      // Protect against normalization\n      code.push('var backup=computed;');\n\n      // After storage finally normalize computed and old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push('if(old===undefined)old=this.', this.$$store.init[name], \";\");\n      } else {\n        code.push('if(old===undefined)old=null;');\n      }\n      code.push('if(computed===undefined||computed==inherit)computed=null;');\n    },\n\n\n    /**\n     * Emit code to normalize the old and incoming values from undefined to\n     * <code>null</code>.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitNormalizeUndefinedValues : function(code, config, name, variant)\n    {\n      // Properties which are not inheritable have no possibility to get\n      // undefined at this position. (Hint: set(), setRuntime() and setThemed() only allow non undefined values)\n      if (variant !== \"setImpl\" && variant !== \"setRuntime\" && variant !== \"setThemed\") {\n        code.push('if(computed===undefined)computed=null;');\n      }\n\n      // Compare old/new computed value\n      code.push('if(equ.call(this,old,computed))return value;');\n\n      // Normalize old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push('if(old===undefined)old=this.', this.$$store.init[name], \";\");\n      } else {\n        code.push('if(old===undefined)old=null;');\n      }\n    },\n\n\n    /**\n     * Emit code to call the apply method and fire the change event\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} variant of the method e.g. setThemed\n     * @param refresh {Boolean} if true, emit code to update the inherited values of child objects\n     */\n    __emitCallCallback : function(code, config, name, variant, refresh)\n    {\n      // Execute user configured setter\n      code.push('var promise;');\n      if (config.apply) {\n        code.push('promise = this.', config.apply, '(computed, old, \"', name, '\", \"', variant, '\");');\n      }\n\n      if (config.async) {\n        code.push(\n        \t\t\"function fire() {\",\n              \"var promiseData = qx.Promise.resolve(computed);\",\n              \"var promise = promiseData;\"\n        \t\t);\n\n        // Fire event\n        if (config.event) {\n          code.push(\n              \"var reg=qx.event.Registration;\",\n              \"if(reg.hasListener(this, '\", config.event, \"')) {\",\n                \"promise = reg.fireEventAsync(this, '\", config.event, \"', qx.event.type.Data, [computed, old]\", \");\",\n                \"promise = promise.then(function() { return computed; });\",\n              \"}\",\n              \"if(reg.hasListener(this, '\", config.event, \"Async'))\",\n                \"promise = promise.then(function() {\",\n                    \"return reg.fireEventAsync(this, '\", config.event, \"Async', qx.event.type.Data, [promiseData, old]\", \");\",\n                  \"}, this);\"\n              );\n        }\n\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            'var a=this._getChildren();',\n            'if(a)',\n              'for(var i=0,l=a.length;i<l;i++){',\n                'if(a[i].', this.$$method.refresh[name], ')',\n                  'a[i].', this.$$method.refresh[name], '(backup);',\n              '}');\n        }\n\n        code.push(\n            \"return promise;\",\n          \"}\");\n      } else {\n        code.push(\n          \"function fire() {\",\n          \"  var tracker={};\");\n\n        // Fire event\n        if (config.event) {\n          code.push(\n              \"var reg=qx.event.Registration;\",\n\n              \"if(reg.hasListener(this, '\", config.event, \"'))\",\n                \"qx.event.Utils.track(tracker, reg.fireEvent(this, '\", config.event, \"', qx.event.type.Data, [computed, old]\", \"));\");\n          if (qx.core.Environment.get(\"qx.promise\")) {\n            code.push(\n                \"if(reg.hasListener(this, '\", config.event, \"Async'))\",\n                  \"qx.event.Utils.then(tracker, function() {\\n\" +\n                  \"  return reg.fireEventAsync(this, '\", config.event, \"Async', qx.event.type.Data, [qx.Promise.resolve(computed), old]\", \");\\n\" +\n                  \"});\"\n                );\n          }\n        }\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            'var a=this._getChildren();',\n            'if(a)',\n              'for(var i=0,l=a.length;i<l;i++){',\n                'if(a[i].', this.$$method.refresh[name], ')',\n                  'a[i].', this.$$method.refresh[name], '(backup);',\n              '}');\n        }\n\n        code.push(\n            \"if (tracker.promise)\\n\",\n            \"  return tracker.promise.then(function() { return computed; });\",\n            \"return computed;\",\n          \"}\");\n      }\n\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        code.push(\n            \"if(promise instanceof qx.Promise) \" +\n              \"return promise.then(fire, this); \"\n          );\n      }\n      code.push(\n        \"return fire.call(this);\"\n      );\n    }\n  }\n});\n"
  ]
}